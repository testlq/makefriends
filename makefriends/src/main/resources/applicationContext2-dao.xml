<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation=
	"http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    ">
				
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	 	<property name="locations" value="classpath:jdbc.properties"/>
	 </bean>
	 <!-- 使用了jdbc数据源 -->
	 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="${driverClassName}"/>
	    <property name="url" value="${url}"/>
	    <property name="username" value="${username}"/>
	    <property name="password" value="${password}"/>
	</bean>	
	 
	
	
	
	<!-- 我们选用的是dao层的mybatis框架，但spring没有提供mybatis的整合的功能，但mybatis自己开发了一个插件，mybatis-spring.xxx.jar -->
	<!-- 在这个 sqlSessionFactory中，主要要完成读取mybatis的配置文件的工作-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源 -->
		<property name="dataSource" ref="dataSource"/>
		
		<!-- 配置configLocation:mybatis的怕之文件路径，sqlSessionFactory会完成读取这个配置文件 
		<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
		 
		<!-- 如果不读取mybatis-config.xml文件，那typealiases,mapper的配置都要单独配 --> 
		<property name="typeAliasesPackage" value="com.yc.bean"/>
		<property name="mapperLocations" value="classpath*:com/yc/dao/*.xml"/>
	</bean>
	
	
	<!-- mybatis sqlSession -->
	<!-- 使用constructor-arg标签的index属性，对应于构造函数的多个参数 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 支持事务注解的（@Transactional） -->
	<tx:annotation-driven transaction-manager="txManager"/>
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="com.yc.dao" />
	</bean>
	
</beans>